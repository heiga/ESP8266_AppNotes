// trolley_system.v

// Generated using ACDS version 16.1 196

`timescale 1 ps / 1 ps
module trolley_system (
		output wire        altpll_0_c1_clk,                          //                       altpll_0_c1.clk
		input  wire        button_button_external_connection_export, // button_button_external_connection.export
		output wire        button_led_external_connection_export,    //    button_led_external_connection.export
		input  wire        cam_uart_external_connection_rxd,         //      cam_uart_external_connection.rxd
		output wire        cam_uart_external_connection_txd,         //                                  .txd
		input  wire        clk_clk,                                  //                               clk.clk
		output wire        epcs_flash_controller_0_external_dclk,    //  epcs_flash_controller_0_external.dclk
		output wire        epcs_flash_controller_0_external_sce,     //                                  .sce
		output wire        epcs_flash_controller_0_external_sdo,     //                                  .sdo
		input  wire        epcs_flash_controller_0_external_data0,   //                                  .data0
		output wire [7:0]  green_leds_external_connection_export,    //    green_leds_external_connection.export
		input  wire        key_external_connection_export,           //           key_external_connection.export
		output wire [2:0]  motor_l_external_connection_export,       //       motor_l_external_connection.export
		output wire [2:0]  motor_r_external_connection_export,       //       motor_r_external_connection.export
		input  wire        prox_sensor_external_connection_export,   //   prox_sensor_external_connection.export
		input  wire        reset_reset_n,                            //                             reset.reset_n
		output wire [11:0] sdram_controller_0_wire_addr,             //           sdram_controller_0_wire.addr
		output wire [1:0]  sdram_controller_0_wire_ba,               //                                  .ba
		output wire        sdram_controller_0_wire_cas_n,            //                                  .cas_n
		output wire        sdram_controller_0_wire_cke,              //                                  .cke
		output wire        sdram_controller_0_wire_cs_n,             //                                  .cs_n
		inout  wire [15:0] sdram_controller_0_wire_dq,               //                                  .dq
		output wire [1:0]  sdram_controller_0_wire_dqm,              //                                  .dqm
		output wire        sdram_controller_0_wire_ras_n,            //                                  .ras_n
		output wire        sdram_controller_0_wire_we_n,             //                                  .we_n
		output wire        speaker_external_connection_export,       //       speaker_external_connection.export
		input  wire        wifi_uart_external_connection_rxd,        //     wifi_uart_external_connection.rxd
		output wire        wifi_uart_external_connection_txd         //                                  .txd
	);

	wire         altpll_0_c0_clk;                                                        // altpll_0:c0 -> [button_button:clk, button_led:clk, cam_uart:clk, epcs_flash_controller_0:clk, green_leds:clk, irq_mapper:clk, jtag_uart_0:clk, key:clk, mm_interconnect_0:altpll_0_c0_clk, motor_l:clk, motor_r:clk, nios2_gen2_0:clk, onchip_memory2_0:clk, prox_sensor:clk, rst_controller_001:clk, sdram_controller_0:clk, speaker:clk, sysid_qsys_0:clock, timer_0:clk, wifi_uart:clk]
	wire  [31:0] nios2_gen2_0_data_master_readdata;                                      // mm_interconnect_0:nios2_gen2_0_data_master_readdata -> nios2_gen2_0:d_readdata
	wire         nios2_gen2_0_data_master_waitrequest;                                   // mm_interconnect_0:nios2_gen2_0_data_master_waitrequest -> nios2_gen2_0:d_waitrequest
	wire         nios2_gen2_0_data_master_debugaccess;                                   // nios2_gen2_0:debug_mem_slave_debugaccess_to_roms -> mm_interconnect_0:nios2_gen2_0_data_master_debugaccess
	wire  [24:0] nios2_gen2_0_data_master_address;                                       // nios2_gen2_0:d_address -> mm_interconnect_0:nios2_gen2_0_data_master_address
	wire   [3:0] nios2_gen2_0_data_master_byteenable;                                    // nios2_gen2_0:d_byteenable -> mm_interconnect_0:nios2_gen2_0_data_master_byteenable
	wire         nios2_gen2_0_data_master_read;                                          // nios2_gen2_0:d_read -> mm_interconnect_0:nios2_gen2_0_data_master_read
	wire         nios2_gen2_0_data_master_write;                                         // nios2_gen2_0:d_write -> mm_interconnect_0:nios2_gen2_0_data_master_write
	wire  [31:0] nios2_gen2_0_data_master_writedata;                                     // nios2_gen2_0:d_writedata -> mm_interconnect_0:nios2_gen2_0_data_master_writedata
	wire  [31:0] nios2_gen2_0_instruction_master_readdata;                               // mm_interconnect_0:nios2_gen2_0_instruction_master_readdata -> nios2_gen2_0:i_readdata
	wire         nios2_gen2_0_instruction_master_waitrequest;                            // mm_interconnect_0:nios2_gen2_0_instruction_master_waitrequest -> nios2_gen2_0:i_waitrequest
	wire  [24:0] nios2_gen2_0_instruction_master_address;                                // nios2_gen2_0:i_address -> mm_interconnect_0:nios2_gen2_0_instruction_master_address
	wire         nios2_gen2_0_instruction_master_read;                                   // nios2_gen2_0:i_read -> mm_interconnect_0:nios2_gen2_0_instruction_master_read
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect;             // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_chipselect -> jtag_uart_0:av_chipselect
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata;               // jtag_uart_0:av_readdata -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_readdata
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest;            // jtag_uart_0:av_waitrequest -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_waitrequest
	wire   [0:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address;                // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_address -> jtag_uart_0:av_address
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;                   // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_read -> jtag_uart_0:av_read_n
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;                  // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_write -> jtag_uart_0:av_write_n
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata;              // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_writedata -> jtag_uart_0:av_writedata
	wire  [31:0] mm_interconnect_0_sysid_qsys_0_control_slave_readdata;                  // sysid_qsys_0:readdata -> mm_interconnect_0:sysid_qsys_0_control_slave_readdata
	wire   [0:0] mm_interconnect_0_sysid_qsys_0_control_slave_address;                   // mm_interconnect_0:sysid_qsys_0_control_slave_address -> sysid_qsys_0:address
	wire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata;                // nios2_gen2_0:debug_mem_slave_readdata -> mm_interconnect_0:nios2_gen2_0_debug_mem_slave_readdata
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest;             // nios2_gen2_0:debug_mem_slave_waitrequest -> mm_interconnect_0:nios2_gen2_0_debug_mem_slave_waitrequest
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess;             // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_debugaccess -> nios2_gen2_0:debug_mem_slave_debugaccess
	wire   [8:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address;                 // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_address -> nios2_gen2_0:debug_mem_slave_address
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read;                    // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_read -> nios2_gen2_0:debug_mem_slave_read
	wire   [3:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable;              // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_byteenable -> nios2_gen2_0:debug_mem_slave_byteenable
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write;                   // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_write -> nios2_gen2_0:debug_mem_slave_write
	wire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata;               // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_writedata -> nios2_gen2_0:debug_mem_slave_writedata
	wire         mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_chipselect; // mm_interconnect_0:epcs_flash_controller_0_epcs_control_port_chipselect -> epcs_flash_controller_0:chipselect
	wire  [31:0] mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_readdata;   // epcs_flash_controller_0:readdata -> mm_interconnect_0:epcs_flash_controller_0_epcs_control_port_readdata
	wire   [8:0] mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_address;    // mm_interconnect_0:epcs_flash_controller_0_epcs_control_port_address -> epcs_flash_controller_0:address
	wire         mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_read;       // mm_interconnect_0:epcs_flash_controller_0_epcs_control_port_read -> epcs_flash_controller_0:read_n
	wire         mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_write;      // mm_interconnect_0:epcs_flash_controller_0_epcs_control_port_write -> epcs_flash_controller_0:write_n
	wire  [31:0] mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_writedata;  // mm_interconnect_0:epcs_flash_controller_0_epcs_control_port_writedata -> epcs_flash_controller_0:writedata
	wire         mm_interconnect_0_onchip_memory2_0_s1_chipselect;                       // mm_interconnect_0:onchip_memory2_0_s1_chipselect -> onchip_memory2_0:chipselect
	wire  [31:0] mm_interconnect_0_onchip_memory2_0_s1_readdata;                         // onchip_memory2_0:readdata -> mm_interconnect_0:onchip_memory2_0_s1_readdata
	wire  [11:0] mm_interconnect_0_onchip_memory2_0_s1_address;                          // mm_interconnect_0:onchip_memory2_0_s1_address -> onchip_memory2_0:address
	wire   [3:0] mm_interconnect_0_onchip_memory2_0_s1_byteenable;                       // mm_interconnect_0:onchip_memory2_0_s1_byteenable -> onchip_memory2_0:byteenable
	wire         mm_interconnect_0_onchip_memory2_0_s1_write;                            // mm_interconnect_0:onchip_memory2_0_s1_write -> onchip_memory2_0:write
	wire  [31:0] mm_interconnect_0_onchip_memory2_0_s1_writedata;                        // mm_interconnect_0:onchip_memory2_0_s1_writedata -> onchip_memory2_0:writedata
	wire         mm_interconnect_0_onchip_memory2_0_s1_clken;                            // mm_interconnect_0:onchip_memory2_0_s1_clken -> onchip_memory2_0:clken
	wire         mm_interconnect_0_sdram_controller_0_s1_chipselect;                     // mm_interconnect_0:sdram_controller_0_s1_chipselect -> sdram_controller_0:az_cs
	wire  [15:0] mm_interconnect_0_sdram_controller_0_s1_readdata;                       // sdram_controller_0:za_data -> mm_interconnect_0:sdram_controller_0_s1_readdata
	wire         mm_interconnect_0_sdram_controller_0_s1_waitrequest;                    // sdram_controller_0:za_waitrequest -> mm_interconnect_0:sdram_controller_0_s1_waitrequest
	wire  [21:0] mm_interconnect_0_sdram_controller_0_s1_address;                        // mm_interconnect_0:sdram_controller_0_s1_address -> sdram_controller_0:az_addr
	wire         mm_interconnect_0_sdram_controller_0_s1_read;                           // mm_interconnect_0:sdram_controller_0_s1_read -> sdram_controller_0:az_rd_n
	wire   [1:0] mm_interconnect_0_sdram_controller_0_s1_byteenable;                     // mm_interconnect_0:sdram_controller_0_s1_byteenable -> sdram_controller_0:az_be_n
	wire         mm_interconnect_0_sdram_controller_0_s1_readdatavalid;                  // sdram_controller_0:za_valid -> mm_interconnect_0:sdram_controller_0_s1_readdatavalid
	wire         mm_interconnect_0_sdram_controller_0_s1_write;                          // mm_interconnect_0:sdram_controller_0_s1_write -> sdram_controller_0:az_wr_n
	wire  [15:0] mm_interconnect_0_sdram_controller_0_s1_writedata;                      // mm_interconnect_0:sdram_controller_0_s1_writedata -> sdram_controller_0:az_data
	wire         mm_interconnect_0_wifi_uart_s1_chipselect;                              // mm_interconnect_0:wifi_uart_s1_chipselect -> wifi_uart:chipselect
	wire  [15:0] mm_interconnect_0_wifi_uart_s1_readdata;                                // wifi_uart:readdata -> mm_interconnect_0:wifi_uart_s1_readdata
	wire   [2:0] mm_interconnect_0_wifi_uart_s1_address;                                 // mm_interconnect_0:wifi_uart_s1_address -> wifi_uart:address
	wire         mm_interconnect_0_wifi_uart_s1_read;                                    // mm_interconnect_0:wifi_uart_s1_read -> wifi_uart:read_n
	wire         mm_interconnect_0_wifi_uart_s1_begintransfer;                           // mm_interconnect_0:wifi_uart_s1_begintransfer -> wifi_uart:begintransfer
	wire         mm_interconnect_0_wifi_uart_s1_write;                                   // mm_interconnect_0:wifi_uart_s1_write -> wifi_uart:write_n
	wire  [15:0] mm_interconnect_0_wifi_uart_s1_writedata;                               // mm_interconnect_0:wifi_uart_s1_writedata -> wifi_uart:writedata
	wire         mm_interconnect_0_prox_sensor_s1_chipselect;                            // mm_interconnect_0:prox_sensor_s1_chipselect -> prox_sensor:chipselect
	wire  [31:0] mm_interconnect_0_prox_sensor_s1_readdata;                              // prox_sensor:readdata -> mm_interconnect_0:prox_sensor_s1_readdata
	wire   [1:0] mm_interconnect_0_prox_sensor_s1_address;                               // mm_interconnect_0:prox_sensor_s1_address -> prox_sensor:address
	wire         mm_interconnect_0_prox_sensor_s1_write;                                 // mm_interconnect_0:prox_sensor_s1_write -> prox_sensor:write_n
	wire  [31:0] mm_interconnect_0_prox_sensor_s1_writedata;                             // mm_interconnect_0:prox_sensor_s1_writedata -> prox_sensor:writedata
	wire         mm_interconnect_0_motor_r_s1_chipselect;                                // mm_interconnect_0:motor_r_s1_chipselect -> motor_r:chipselect
	wire  [31:0] mm_interconnect_0_motor_r_s1_readdata;                                  // motor_r:readdata -> mm_interconnect_0:motor_r_s1_readdata
	wire   [1:0] mm_interconnect_0_motor_r_s1_address;                                   // mm_interconnect_0:motor_r_s1_address -> motor_r:address
	wire         mm_interconnect_0_motor_r_s1_write;                                     // mm_interconnect_0:motor_r_s1_write -> motor_r:write_n
	wire  [31:0] mm_interconnect_0_motor_r_s1_writedata;                                 // mm_interconnect_0:motor_r_s1_writedata -> motor_r:writedata
	wire         mm_interconnect_0_motor_l_s1_chipselect;                                // mm_interconnect_0:motor_l_s1_chipselect -> motor_l:chipselect
	wire  [31:0] mm_interconnect_0_motor_l_s1_readdata;                                  // motor_l:readdata -> mm_interconnect_0:motor_l_s1_readdata
	wire   [1:0] mm_interconnect_0_motor_l_s1_address;                                   // mm_interconnect_0:motor_l_s1_address -> motor_l:address
	wire         mm_interconnect_0_motor_l_s1_write;                                     // mm_interconnect_0:motor_l_s1_write -> motor_l:write_n
	wire  [31:0] mm_interconnect_0_motor_l_s1_writedata;                                 // mm_interconnect_0:motor_l_s1_writedata -> motor_l:writedata
	wire         mm_interconnect_0_green_leds_s1_chipselect;                             // mm_interconnect_0:green_leds_s1_chipselect -> green_leds:chipselect
	wire  [31:0] mm_interconnect_0_green_leds_s1_readdata;                               // green_leds:readdata -> mm_interconnect_0:green_leds_s1_readdata
	wire   [1:0] mm_interconnect_0_green_leds_s1_address;                                // mm_interconnect_0:green_leds_s1_address -> green_leds:address
	wire         mm_interconnect_0_green_leds_s1_write;                                  // mm_interconnect_0:green_leds_s1_write -> green_leds:write_n
	wire  [31:0] mm_interconnect_0_green_leds_s1_writedata;                              // mm_interconnect_0:green_leds_s1_writedata -> green_leds:writedata
	wire         mm_interconnect_0_button_button_s1_chipselect;                          // mm_interconnect_0:button_button_s1_chipselect -> button_button:chipselect
	wire  [31:0] mm_interconnect_0_button_button_s1_readdata;                            // button_button:readdata -> mm_interconnect_0:button_button_s1_readdata
	wire   [1:0] mm_interconnect_0_button_button_s1_address;                             // mm_interconnect_0:button_button_s1_address -> button_button:address
	wire         mm_interconnect_0_button_button_s1_write;                               // mm_interconnect_0:button_button_s1_write -> button_button:write_n
	wire  [31:0] mm_interconnect_0_button_button_s1_writedata;                           // mm_interconnect_0:button_button_s1_writedata -> button_button:writedata
	wire         mm_interconnect_0_button_led_s1_chipselect;                             // mm_interconnect_0:button_led_s1_chipselect -> button_led:chipselect
	wire  [31:0] mm_interconnect_0_button_led_s1_readdata;                               // button_led:readdata -> mm_interconnect_0:button_led_s1_readdata
	wire   [1:0] mm_interconnect_0_button_led_s1_address;                                // mm_interconnect_0:button_led_s1_address -> button_led:address
	wire         mm_interconnect_0_button_led_s1_write;                                  // mm_interconnect_0:button_led_s1_write -> button_led:write_n
	wire  [31:0] mm_interconnect_0_button_led_s1_writedata;                              // mm_interconnect_0:button_led_s1_writedata -> button_led:writedata
	wire         mm_interconnect_0_speaker_s1_chipselect;                                // mm_interconnect_0:speaker_s1_chipselect -> speaker:chipselect
	wire  [31:0] mm_interconnect_0_speaker_s1_readdata;                                  // speaker:readdata -> mm_interconnect_0:speaker_s1_readdata
	wire   [1:0] mm_interconnect_0_speaker_s1_address;                                   // mm_interconnect_0:speaker_s1_address -> speaker:address
	wire         mm_interconnect_0_speaker_s1_write;                                     // mm_interconnect_0:speaker_s1_write -> speaker:write_n
	wire  [31:0] mm_interconnect_0_speaker_s1_writedata;                                 // mm_interconnect_0:speaker_s1_writedata -> speaker:writedata
	wire         mm_interconnect_0_timer_0_s1_chipselect;                                // mm_interconnect_0:timer_0_s1_chipselect -> timer_0:chipselect
	wire  [15:0] mm_interconnect_0_timer_0_s1_readdata;                                  // timer_0:readdata -> mm_interconnect_0:timer_0_s1_readdata
	wire   [2:0] mm_interconnect_0_timer_0_s1_address;                                   // mm_interconnect_0:timer_0_s1_address -> timer_0:address
	wire         mm_interconnect_0_timer_0_s1_write;                                     // mm_interconnect_0:timer_0_s1_write -> timer_0:write_n
	wire  [15:0] mm_interconnect_0_timer_0_s1_writedata;                                 // mm_interconnect_0:timer_0_s1_writedata -> timer_0:writedata
	wire         mm_interconnect_0_key_s1_chipselect;                                    // mm_interconnect_0:key_s1_chipselect -> key:chipselect
	wire  [31:0] mm_interconnect_0_key_s1_readdata;                                      // key:readdata -> mm_interconnect_0:key_s1_readdata
	wire   [1:0] mm_interconnect_0_key_s1_address;                                       // mm_interconnect_0:key_s1_address -> key:address
	wire         mm_interconnect_0_key_s1_write;                                         // mm_interconnect_0:key_s1_write -> key:write_n
	wire  [31:0] mm_interconnect_0_key_s1_writedata;                                     // mm_interconnect_0:key_s1_writedata -> key:writedata
	wire         mm_interconnect_0_cam_uart_s1_chipselect;                               // mm_interconnect_0:cam_uart_s1_chipselect -> cam_uart:chipselect
	wire  [31:0] mm_interconnect_0_cam_uart_s1_readdata;                                 // cam_uart:readdata -> mm_interconnect_0:cam_uart_s1_readdata
	wire   [3:0] mm_interconnect_0_cam_uart_s1_address;                                  // mm_interconnect_0:cam_uart_s1_address -> cam_uart:address
	wire         mm_interconnect_0_cam_uart_s1_read;                                     // mm_interconnect_0:cam_uart_s1_read -> cam_uart:read_n
	wire         mm_interconnect_0_cam_uart_s1_begintransfer;                            // mm_interconnect_0:cam_uart_s1_begintransfer -> cam_uart:begintransfer
	wire         mm_interconnect_0_cam_uart_s1_write;                                    // mm_interconnect_0:cam_uart_s1_write -> cam_uart:write_n
	wire  [31:0] mm_interconnect_0_cam_uart_s1_writedata;                                // mm_interconnect_0:cam_uart_s1_writedata -> cam_uart:writedata
	wire         irq_mapper_receiver0_irq;                                               // jtag_uart_0:av_irq -> irq_mapper:receiver0_irq
	wire         irq_mapper_receiver1_irq;                                               // wifi_uart:irq -> irq_mapper:receiver1_irq
	wire         irq_mapper_receiver2_irq;                                               // prox_sensor:irq -> irq_mapper:receiver2_irq
	wire         irq_mapper_receiver3_irq;                                               // button_button:irq -> irq_mapper:receiver3_irq
	wire         irq_mapper_receiver4_irq;                                               // timer_0:irq -> irq_mapper:receiver4_irq
	wire         irq_mapper_receiver5_irq;                                               // epcs_flash_controller_0:irq -> irq_mapper:receiver5_irq
	wire         irq_mapper_receiver6_irq;                                               // key:irq -> irq_mapper:receiver6_irq
	wire         irq_mapper_receiver7_irq;                                               // cam_uart:irq -> irq_mapper:receiver7_irq
	wire  [31:0] nios2_gen2_0_irq_irq;                                                   // irq_mapper:sender_irq -> nios2_gen2_0:irq
	wire         rst_controller_reset_out_reset;                                         // rst_controller:reset_out -> altpll_0:reset
	wire         nios2_gen2_0_debug_reset_request_reset;                                 // nios2_gen2_0:debug_reset_request -> [rst_controller:reset_in1, rst_controller_001:reset_in1]
	wire         rst_controller_001_reset_out_reset;                                     // rst_controller_001:reset_out -> [button_button:reset_n, button_led:reset_n, cam_uart:reset_n, epcs_flash_controller_0:reset_n, green_leds:reset_n, irq_mapper:reset, jtag_uart_0:rst_n, key:reset_n, mm_interconnect_0:nios2_gen2_0_reset_reset_bridge_in_reset_reset, motor_l:reset_n, motor_r:reset_n, nios2_gen2_0:reset_n, onchip_memory2_0:reset, prox_sensor:reset_n, rst_translator:in_reset, sdram_controller_0:reset_n, speaker:reset_n, sysid_qsys_0:reset_n, timer_0:reset_n, wifi_uart:reset_n]
	wire         rst_controller_001_reset_out_reset_req;                                 // rst_controller_001:reset_req -> [epcs_flash_controller_0:reset_req, nios2_gen2_0:reset_req, onchip_memory2_0:reset_req, rst_translator:reset_req_in]

	trolley_system_altpll_0 altpll_0 (
		.clk                (clk_clk),                        //       inclk_interface.clk
		.reset              (rst_controller_reset_out_reset), // inclk_interface_reset.reset
		.read               (),                               //             pll_slave.read
		.write              (),                               //                      .write
		.address            (),                               //                      .address
		.readdata           (),                               //                      .readdata
		.writedata          (),                               //                      .writedata
		.c0                 (altpll_0_c0_clk),                //                    c0.clk
		.c1                 (altpll_0_c1_clk),                //                    c1.clk
		.scandone           (),                               //           (terminated)
		.scandataout        (),                               //           (terminated)
		.areset             (1'b0),                           //           (terminated)
		.locked             (),                               //           (terminated)
		.phasedone          (),                               //           (terminated)
		.phasecounterselect (4'b0000),                        //           (terminated)
		.phaseupdown        (1'b0),                           //           (terminated)
		.phasestep          (1'b0),                           //           (terminated)
		.scanclk            (1'b0),                           //           (terminated)
		.scanclkena         (1'b0),                           //           (terminated)
		.scandata           (1'b0),                           //           (terminated)
		.configupdate       (1'b0)                            //           (terminated)
	);

	trolley_system_button_button button_button (
		.clk        (altpll_0_c0_clk),                               //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),           //               reset.reset_n
		.address    (mm_interconnect_0_button_button_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_button_button_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_button_button_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_button_button_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_button_button_s1_readdata),   //                    .readdata
		.in_port    (button_button_external_connection_export),      // external_connection.export
		.irq        (irq_mapper_receiver3_irq)                       //                 irq.irq
	);

	trolley_system_button_led button_led (
		.clk        (altpll_0_c0_clk),                            //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),        //               reset.reset_n
		.address    (mm_interconnect_0_button_led_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_button_led_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_button_led_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_button_led_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_button_led_s1_readdata),   //                    .readdata
		.out_port   (button_led_external_connection_export)       // external_connection.export
	);

	trolley_system_cam_uart cam_uart (
		.clk           (altpll_0_c0_clk),                             //                 clk.clk
		.reset_n       (~rst_controller_001_reset_out_reset),         //               reset.reset_n
		.address       (mm_interconnect_0_cam_uart_s1_address),       //                  s1.address
		.begintransfer (mm_interconnect_0_cam_uart_s1_begintransfer), //                    .begintransfer
		.chipselect    (mm_interconnect_0_cam_uart_s1_chipselect),    //                    .chipselect
		.read_n        (~mm_interconnect_0_cam_uart_s1_read),         //                    .read_n
		.write_n       (~mm_interconnect_0_cam_uart_s1_write),        //                    .write_n
		.writedata     (mm_interconnect_0_cam_uart_s1_writedata),     //                    .writedata
		.readdata      (mm_interconnect_0_cam_uart_s1_readdata),      //                    .readdata
		.rxd           (cam_uart_external_connection_rxd),            // external_connection.export
		.txd           (cam_uart_external_connection_txd),            //                    .export
		.irq           (irq_mapper_receiver7_irq),                    //                 irq.irq
		.readyfordata  (),                                            //         (terminated)
		.dataavailable ()                                             //         (terminated)
	);

	trolley_system_epcs_flash_controller_0 epcs_flash_controller_0 (
		.clk        (altpll_0_c0_clk),                                                        //               clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),                                    //             reset.reset_n
		.reset_req  (rst_controller_001_reset_out_reset_req),                                 //                  .reset_req
		.address    (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_address),    // epcs_control_port.address
		.chipselect (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_chipselect), //                  .chipselect
		.read_n     (~mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_read),      //                  .read_n
		.readdata   (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_readdata),   //                  .readdata
		.write_n    (~mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_write),     //                  .write_n
		.writedata  (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_writedata),  //                  .writedata
		.irq        (irq_mapper_receiver5_irq),                                               //               irq.irq
		.dclk       (epcs_flash_controller_0_external_dclk),                                  //          external.export
		.sce        (epcs_flash_controller_0_external_sce),                                   //                  .export
		.sdo        (epcs_flash_controller_0_external_sdo),                                   //                  .export
		.data0      (epcs_flash_controller_0_external_data0)                                  //                  .export
	);

	trolley_system_green_leds green_leds (
		.clk        (altpll_0_c0_clk),                            //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),        //               reset.reset_n
		.address    (mm_interconnect_0_green_leds_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_green_leds_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_green_leds_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_green_leds_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_green_leds_s1_readdata),   //                    .readdata
		.out_port   (green_leds_external_connection_export)       // external_connection.export
	);

	trolley_system_jtag_uart_0 jtag_uart_0 (
		.clk            (altpll_0_c0_clk),                                             //               clk.clk
		.rst_n          (~rst_controller_001_reset_out_reset),                         //             reset.reset_n
		.av_chipselect  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  // avalon_jtag_slave.chipselect
		.av_address     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     //                  .address
		.av_read_n      (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),       //                  .read_n
		.av_readdata    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    //                  .readdata
		.av_write_n     (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),      //                  .write_n
		.av_writedata   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   //                  .writedata
		.av_waitrequest (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), //                  .waitrequest
		.av_irq         (irq_mapper_receiver0_irq)                                     //               irq.irq
	);

	trolley_system_key key (
		.clk        (altpll_0_c0_clk),                     //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset), //               reset.reset_n
		.address    (mm_interconnect_0_key_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_key_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_key_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_key_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_key_s1_readdata),   //                    .readdata
		.in_port    (key_external_connection_export),      // external_connection.export
		.irq        (irq_mapper_receiver6_irq)             //                 irq.irq
	);

	trolley_system_motor_l motor_l (
		.clk        (altpll_0_c0_clk),                         //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),     //               reset.reset_n
		.address    (mm_interconnect_0_motor_l_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_motor_l_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_motor_l_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_motor_l_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_motor_l_s1_readdata),   //                    .readdata
		.out_port   (motor_l_external_connection_export)       // external_connection.export
	);

	trolley_system_motor_l motor_r (
		.clk        (altpll_0_c0_clk),                         //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),     //               reset.reset_n
		.address    (mm_interconnect_0_motor_r_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_motor_r_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_motor_r_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_motor_r_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_motor_r_s1_readdata),   //                    .readdata
		.out_port   (motor_r_external_connection_export)       // external_connection.export
	);

	trolley_system_nios2_gen2_0 nios2_gen2_0 (
		.clk                                 (altpll_0_c0_clk),                                            //                       clk.clk
		.reset_n                             (~rst_controller_001_reset_out_reset),                        //                     reset.reset_n
		.reset_req                           (rst_controller_001_reset_out_reset_req),                     //                          .reset_req
		.d_address                           (nios2_gen2_0_data_master_address),                           //               data_master.address
		.d_byteenable                        (nios2_gen2_0_data_master_byteenable),                        //                          .byteenable
		.d_read                              (nios2_gen2_0_data_master_read),                              //                          .read
		.d_readdata                          (nios2_gen2_0_data_master_readdata),                          //                          .readdata
		.d_waitrequest                       (nios2_gen2_0_data_master_waitrequest),                       //                          .waitrequest
		.d_write                             (nios2_gen2_0_data_master_write),                             //                          .write
		.d_writedata                         (nios2_gen2_0_data_master_writedata),                         //                          .writedata
		.debug_mem_slave_debugaccess_to_roms (nios2_gen2_0_data_master_debugaccess),                       //                          .debugaccess
		.i_address                           (nios2_gen2_0_instruction_master_address),                    //        instruction_master.address
		.i_read                              (nios2_gen2_0_instruction_master_read),                       //                          .read
		.i_readdata                          (nios2_gen2_0_instruction_master_readdata),                   //                          .readdata
		.i_waitrequest                       (nios2_gen2_0_instruction_master_waitrequest),                //                          .waitrequest
		.irq                                 (nios2_gen2_0_irq_irq),                                       //                       irq.irq
		.debug_reset_request                 (nios2_gen2_0_debug_reset_request_reset),                     //       debug_reset_request.reset
		.debug_mem_slave_address             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),     //           debug_mem_slave.address
		.debug_mem_slave_byteenable          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),  //                          .byteenable
		.debug_mem_slave_debugaccess         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess), //                          .debugaccess
		.debug_mem_slave_read                (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),        //                          .read
		.debug_mem_slave_readdata            (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),    //                          .readdata
		.debug_mem_slave_waitrequest         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest), //                          .waitrequest
		.debug_mem_slave_write               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),       //                          .write
		.debug_mem_slave_writedata           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),   //                          .writedata
		.dummy_ci_port                       ()                                                            // custom_instruction_master.readra
	);

	trolley_system_onchip_memory2_0 onchip_memory2_0 (
		.clk        (altpll_0_c0_clk),                                  //   clk1.clk
		.address    (mm_interconnect_0_onchip_memory2_0_s1_address),    //     s1.address
		.clken      (mm_interconnect_0_onchip_memory2_0_s1_clken),      //       .clken
		.chipselect (mm_interconnect_0_onchip_memory2_0_s1_chipselect), //       .chipselect
		.write      (mm_interconnect_0_onchip_memory2_0_s1_write),      //       .write
		.readdata   (mm_interconnect_0_onchip_memory2_0_s1_readdata),   //       .readdata
		.writedata  (mm_interconnect_0_onchip_memory2_0_s1_writedata),  //       .writedata
		.byteenable (mm_interconnect_0_onchip_memory2_0_s1_byteenable), //       .byteenable
		.reset      (rst_controller_001_reset_out_reset),               // reset1.reset
		.reset_req  (rst_controller_001_reset_out_reset_req),           //       .reset_req
		.freeze     (1'b0)                                              // (terminated)
	);

	trolley_system_button_button prox_sensor (
		.clk        (altpll_0_c0_clk),                             //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),         //               reset.reset_n
		.address    (mm_interconnect_0_prox_sensor_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_prox_sensor_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_prox_sensor_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_prox_sensor_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_prox_sensor_s1_readdata),   //                    .readdata
		.in_port    (prox_sensor_external_connection_export),      // external_connection.export
		.irq        (irq_mapper_receiver2_irq)                     //                 irq.irq
	);

	trolley_system_sdram_controller_0 sdram_controller_0 (
		.clk            (altpll_0_c0_clk),                                       //   clk.clk
		.reset_n        (~rst_controller_001_reset_out_reset),                   // reset.reset_n
		.az_addr        (mm_interconnect_0_sdram_controller_0_s1_address),       //    s1.address
		.az_be_n        (~mm_interconnect_0_sdram_controller_0_s1_byteenable),   //      .byteenable_n
		.az_cs          (mm_interconnect_0_sdram_controller_0_s1_chipselect),    //      .chipselect
		.az_data        (mm_interconnect_0_sdram_controller_0_s1_writedata),     //      .writedata
		.az_rd_n        (~mm_interconnect_0_sdram_controller_0_s1_read),         //      .read_n
		.az_wr_n        (~mm_interconnect_0_sdram_controller_0_s1_write),        //      .write_n
		.za_data        (mm_interconnect_0_sdram_controller_0_s1_readdata),      //      .readdata
		.za_valid       (mm_interconnect_0_sdram_controller_0_s1_readdatavalid), //      .readdatavalid
		.za_waitrequest (mm_interconnect_0_sdram_controller_0_s1_waitrequest),   //      .waitrequest
		.zs_addr        (sdram_controller_0_wire_addr),                          //  wire.export
		.zs_ba          (sdram_controller_0_wire_ba),                            //      .export
		.zs_cas_n       (sdram_controller_0_wire_cas_n),                         //      .export
		.zs_cke         (sdram_controller_0_wire_cke),                           //      .export
		.zs_cs_n        (sdram_controller_0_wire_cs_n),                          //      .export
		.zs_dq          (sdram_controller_0_wire_dq),                            //      .export
		.zs_dqm         (sdram_controller_0_wire_dqm),                           //      .export
		.zs_ras_n       (sdram_controller_0_wire_ras_n),                         //      .export
		.zs_we_n        (sdram_controller_0_wire_we_n)                           //      .export
	);

	trolley_system_button_led speaker (
		.clk        (altpll_0_c0_clk),                         //                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),     //               reset.reset_n
		.address    (mm_interconnect_0_speaker_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_speaker_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_speaker_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_speaker_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_speaker_s1_readdata),   //                    .readdata
		.out_port   (speaker_external_connection_export)       // external_connection.export
	);

	trolley_system_sysid_qsys_0 sysid_qsys_0 (
		.clock    (altpll_0_c0_clk),                                       //           clk.clk
		.reset_n  (~rst_controller_001_reset_out_reset),                   //         reset.reset_n
		.readdata (mm_interconnect_0_sysid_qsys_0_control_slave_readdata), // control_slave.readdata
		.address  (mm_interconnect_0_sysid_qsys_0_control_slave_address)   //              .address
	);

	trolley_system_timer_0 timer_0 (
		.clk        (altpll_0_c0_clk),                         //   clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),     // reset.reset_n
		.address    (mm_interconnect_0_timer_0_s1_address),    //    s1.address
		.writedata  (mm_interconnect_0_timer_0_s1_writedata),  //      .writedata
		.readdata   (mm_interconnect_0_timer_0_s1_readdata),   //      .readdata
		.chipselect (mm_interconnect_0_timer_0_s1_chipselect), //      .chipselect
		.write_n    (~mm_interconnect_0_timer_0_s1_write),     //      .write_n
		.irq        (irq_mapper_receiver4_irq)                 //   irq.irq
	);

	trolley_system_wifi_uart wifi_uart (
		.clk           (altpll_0_c0_clk),                              //                 clk.clk
		.reset_n       (~rst_controller_001_reset_out_reset),          //               reset.reset_n
		.address       (mm_interconnect_0_wifi_uart_s1_address),       //                  s1.address
		.begintransfer (mm_interconnect_0_wifi_uart_s1_begintransfer), //                    .begintransfer
		.chipselect    (mm_interconnect_0_wifi_uart_s1_chipselect),    //                    .chipselect
		.read_n        (~mm_interconnect_0_wifi_uart_s1_read),         //                    .read_n
		.write_n       (~mm_interconnect_0_wifi_uart_s1_write),        //                    .write_n
		.writedata     (mm_interconnect_0_wifi_uart_s1_writedata),     //                    .writedata
		.readdata      (mm_interconnect_0_wifi_uart_s1_readdata),      //                    .readdata
		.rxd           (wifi_uart_external_connection_rxd),            // external_connection.export
		.txd           (wifi_uart_external_connection_txd),            //                    .export
		.irq           (irq_mapper_receiver1_irq)                      //                 irq.irq
	);

	trolley_system_mm_interconnect_0 mm_interconnect_0 (
		.altpll_0_c0_clk                                      (altpll_0_c0_clk),                                                        //                               altpll_0_c0.clk
		.nios2_gen2_0_reset_reset_bridge_in_reset_reset       (rst_controller_001_reset_out_reset),                                     //  nios2_gen2_0_reset_reset_bridge_in_reset.reset
		.nios2_gen2_0_data_master_address                     (nios2_gen2_0_data_master_address),                                       //                  nios2_gen2_0_data_master.address
		.nios2_gen2_0_data_master_waitrequest                 (nios2_gen2_0_data_master_waitrequest),                                   //                                          .waitrequest
		.nios2_gen2_0_data_master_byteenable                  (nios2_gen2_0_data_master_byteenable),                                    //                                          .byteenable
		.nios2_gen2_0_data_master_read                        (nios2_gen2_0_data_master_read),                                          //                                          .read
		.nios2_gen2_0_data_master_readdata                    (nios2_gen2_0_data_master_readdata),                                      //                                          .readdata
		.nios2_gen2_0_data_master_write                       (nios2_gen2_0_data_master_write),                                         //                                          .write
		.nios2_gen2_0_data_master_writedata                   (nios2_gen2_0_data_master_writedata),                                     //                                          .writedata
		.nios2_gen2_0_data_master_debugaccess                 (nios2_gen2_0_data_master_debugaccess),                                   //                                          .debugaccess
		.nios2_gen2_0_instruction_master_address              (nios2_gen2_0_instruction_master_address),                                //           nios2_gen2_0_instruction_master.address
		.nios2_gen2_0_instruction_master_waitrequest          (nios2_gen2_0_instruction_master_waitrequest),                            //                                          .waitrequest
		.nios2_gen2_0_instruction_master_read                 (nios2_gen2_0_instruction_master_read),                                   //                                          .read
		.nios2_gen2_0_instruction_master_readdata             (nios2_gen2_0_instruction_master_readdata),                               //                                          .readdata
		.button_button_s1_address                             (mm_interconnect_0_button_button_s1_address),                             //                          button_button_s1.address
		.button_button_s1_write                               (mm_interconnect_0_button_button_s1_write),                               //                                          .write
		.button_button_s1_readdata                            (mm_interconnect_0_button_button_s1_readdata),                            //                                          .readdata
		.button_button_s1_writedata                           (mm_interconnect_0_button_button_s1_writedata),                           //                                          .writedata
		.button_button_s1_chipselect                          (mm_interconnect_0_button_button_s1_chipselect),                          //                                          .chipselect
		.button_led_s1_address                                (mm_interconnect_0_button_led_s1_address),                                //                             button_led_s1.address
		.button_led_s1_write                                  (mm_interconnect_0_button_led_s1_write),                                  //                                          .write
		.button_led_s1_readdata                               (mm_interconnect_0_button_led_s1_readdata),                               //                                          .readdata
		.button_led_s1_writedata                              (mm_interconnect_0_button_led_s1_writedata),                              //                                          .writedata
		.button_led_s1_chipselect                             (mm_interconnect_0_button_led_s1_chipselect),                             //                                          .chipselect
		.cam_uart_s1_address                                  (mm_interconnect_0_cam_uart_s1_address),                                  //                               cam_uart_s1.address
		.cam_uart_s1_write                                    (mm_interconnect_0_cam_uart_s1_write),                                    //                                          .write
		.cam_uart_s1_read                                     (mm_interconnect_0_cam_uart_s1_read),                                     //                                          .read
		.cam_uart_s1_readdata                                 (mm_interconnect_0_cam_uart_s1_readdata),                                 //                                          .readdata
		.cam_uart_s1_writedata                                (mm_interconnect_0_cam_uart_s1_writedata),                                //                                          .writedata
		.cam_uart_s1_begintransfer                            (mm_interconnect_0_cam_uart_s1_begintransfer),                            //                                          .begintransfer
		.cam_uart_s1_chipselect                               (mm_interconnect_0_cam_uart_s1_chipselect),                               //                                          .chipselect
		.epcs_flash_controller_0_epcs_control_port_address    (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_address),    // epcs_flash_controller_0_epcs_control_port.address
		.epcs_flash_controller_0_epcs_control_port_write      (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_write),      //                                          .write
		.epcs_flash_controller_0_epcs_control_port_read       (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_read),       //                                          .read
		.epcs_flash_controller_0_epcs_control_port_readdata   (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_readdata),   //                                          .readdata
		.epcs_flash_controller_0_epcs_control_port_writedata  (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_writedata),  //                                          .writedata
		.epcs_flash_controller_0_epcs_control_port_chipselect (mm_interconnect_0_epcs_flash_controller_0_epcs_control_port_chipselect), //                                          .chipselect
		.green_leds_s1_address                                (mm_interconnect_0_green_leds_s1_address),                                //                             green_leds_s1.address
		.green_leds_s1_write                                  (mm_interconnect_0_green_leds_s1_write),                                  //                                          .write
		.green_leds_s1_readdata                               (mm_interconnect_0_green_leds_s1_readdata),                               //                                          .readdata
		.green_leds_s1_writedata                              (mm_interconnect_0_green_leds_s1_writedata),                              //                                          .writedata
		.green_leds_s1_chipselect                             (mm_interconnect_0_green_leds_s1_chipselect),                             //                                          .chipselect
		.jtag_uart_0_avalon_jtag_slave_address                (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),                //             jtag_uart_0_avalon_jtag_slave.address
		.jtag_uart_0_avalon_jtag_slave_write                  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),                  //                                          .write
		.jtag_uart_0_avalon_jtag_slave_read                   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),                   //                                          .read
		.jtag_uart_0_avalon_jtag_slave_readdata               (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),               //                                          .readdata
		.jtag_uart_0_avalon_jtag_slave_writedata              (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),              //                                          .writedata
		.jtag_uart_0_avalon_jtag_slave_waitrequest            (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest),            //                                          .waitrequest
		.jtag_uart_0_avalon_jtag_slave_chipselect             (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),             //                                          .chipselect
		.key_s1_address                                       (mm_interconnect_0_key_s1_address),                                       //                                    key_s1.address
		.key_s1_write                                         (mm_interconnect_0_key_s1_write),                                         //                                          .write
		.key_s1_readdata                                      (mm_interconnect_0_key_s1_readdata),                                      //                                          .readdata
		.key_s1_writedata                                     (mm_interconnect_0_key_s1_writedata),                                     //                                          .writedata
		.key_s1_chipselect                                    (mm_interconnect_0_key_s1_chipselect),                                    //                                          .chipselect
		.motor_l_s1_address                                   (mm_interconnect_0_motor_l_s1_address),                                   //                                motor_l_s1.address
		.motor_l_s1_write                                     (mm_interconnect_0_motor_l_s1_write),                                     //                                          .write
		.motor_l_s1_readdata                                  (mm_interconnect_0_motor_l_s1_readdata),                                  //                                          .readdata
		.motor_l_s1_writedata                                 (mm_interconnect_0_motor_l_s1_writedata),                                 //                                          .writedata
		.motor_l_s1_chipselect                                (mm_interconnect_0_motor_l_s1_chipselect),                                //                                          .chipselect
		.motor_r_s1_address                                   (mm_interconnect_0_motor_r_s1_address),                                   //                                motor_r_s1.address
		.motor_r_s1_write                                     (mm_interconnect_0_motor_r_s1_write),                                     //                                          .write
		.motor_r_s1_readdata                                  (mm_interconnect_0_motor_r_s1_readdata),                                  //                                          .readdata
		.motor_r_s1_writedata                                 (mm_interconnect_0_motor_r_s1_writedata),                                 //                                          .writedata
		.motor_r_s1_chipselect                                (mm_interconnect_0_motor_r_s1_chipselect),                                //                                          .chipselect
		.nios2_gen2_0_debug_mem_slave_address                 (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),                 //              nios2_gen2_0_debug_mem_slave.address
		.nios2_gen2_0_debug_mem_slave_write                   (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),                   //                                          .write
		.nios2_gen2_0_debug_mem_slave_read                    (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),                    //                                          .read
		.nios2_gen2_0_debug_mem_slave_readdata                (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),                //                                          .readdata
		.nios2_gen2_0_debug_mem_slave_writedata               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),               //                                          .writedata
		.nios2_gen2_0_debug_mem_slave_byteenable              (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),              //                                          .byteenable
		.nios2_gen2_0_debug_mem_slave_waitrequest             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest),             //                                          .waitrequest
		.nios2_gen2_0_debug_mem_slave_debugaccess             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess),             //                                          .debugaccess
		.onchip_memory2_0_s1_address                          (mm_interconnect_0_onchip_memory2_0_s1_address),                          //                       onchip_memory2_0_s1.address
		.onchip_memory2_0_s1_write                            (mm_interconnect_0_onchip_memory2_0_s1_write),                            //                                          .write
		.onchip_memory2_0_s1_readdata                         (mm_interconnect_0_onchip_memory2_0_s1_readdata),                         //                                          .readdata
		.onchip_memory2_0_s1_writedata                        (mm_interconnect_0_onchip_memory2_0_s1_writedata),                        //                                          .writedata
		.onchip_memory2_0_s1_byteenable                       (mm_interconnect_0_onchip_memory2_0_s1_byteenable),                       //                                          .byteenable
		.onchip_memory2_0_s1_chipselect                       (mm_interconnect_0_onchip_memory2_0_s1_chipselect),                       //                                          .chipselect
		.onchip_memory2_0_s1_clken                            (mm_interconnect_0_onchip_memory2_0_s1_clken),                            //                                          .clken
		.prox_sensor_s1_address                               (mm_interconnect_0_prox_sensor_s1_address),                               //                            prox_sensor_s1.address
		.prox_sensor_s1_write                                 (mm_interconnect_0_prox_sensor_s1_write),                                 //                                          .write
		.prox_sensor_s1_readdata                              (mm_interconnect_0_prox_sensor_s1_readdata),                              //                                          .readdata
		.prox_sensor_s1_writedata                             (mm_interconnect_0_prox_sensor_s1_writedata),                             //                                          .writedata
		.prox_sensor_s1_chipselect                            (mm_interconnect_0_prox_sensor_s1_chipselect),                            //                                          .chipselect
		.sdram_controller_0_s1_address                        (mm_interconnect_0_sdram_controller_0_s1_address),                        //                     sdram_controller_0_s1.address
		.sdram_controller_0_s1_write                          (mm_interconnect_0_sdram_controller_0_s1_write),                          //                                          .write
		.sdram_controller_0_s1_read                           (mm_interconnect_0_sdram_controller_0_s1_read),                           //                                          .read
		.sdram_controller_0_s1_readdata                       (mm_interconnect_0_sdram_controller_0_s1_readdata),                       //                                          .readdata
		.sdram_controller_0_s1_writedata                      (mm_interconnect_0_sdram_controller_0_s1_writedata),                      //                                          .writedata
		.sdram_controller_0_s1_byteenable                     (mm_interconnect_0_sdram_controller_0_s1_byteenable),                     //                                          .byteenable
		.sdram_controller_0_s1_readdatavalid                  (mm_interconnect_0_sdram_controller_0_s1_readdatavalid),                  //                                          .readdatavalid
		.sdram_controller_0_s1_waitrequest                    (mm_interconnect_0_sdram_controller_0_s1_waitrequest),                    //                                          .waitrequest
		.sdram_controller_0_s1_chipselect                     (mm_interconnect_0_sdram_controller_0_s1_chipselect),                     //                                          .chipselect
		.speaker_s1_address                                   (mm_interconnect_0_speaker_s1_address),                                   //                                speaker_s1.address
		.speaker_s1_write                                     (mm_interconnect_0_speaker_s1_write),                                     //                                          .write
		.speaker_s1_readdata                                  (mm_interconnect_0_speaker_s1_readdata),                                  //                                          .readdata
		.speaker_s1_writedata                                 (mm_interconnect_0_speaker_s1_writedata),                                 //                                          .writedata
		.speaker_s1_chipselect                                (mm_interconnect_0_speaker_s1_chipselect),                                //                                          .chipselect
		.sysid_qsys_0_control_slave_address                   (mm_interconnect_0_sysid_qsys_0_control_slave_address),                   //                sysid_qsys_0_control_slave.address
		.sysid_qsys_0_control_slave_readdata                  (mm_interconnect_0_sysid_qsys_0_control_slave_readdata),                  //                                          .readdata
		.timer_0_s1_address                                   (mm_interconnect_0_timer_0_s1_address),                                   //                                timer_0_s1.address
		.timer_0_s1_write                                     (mm_interconnect_0_timer_0_s1_write),                                     //                                          .write
		.timer_0_s1_readdata                                  (mm_interconnect_0_timer_0_s1_readdata),                                  //                                          .readdata
		.timer_0_s1_writedata                                 (mm_interconnect_0_timer_0_s1_writedata),                                 //                                          .writedata
		.timer_0_s1_chipselect                                (mm_interconnect_0_timer_0_s1_chipselect),                                //                                          .chipselect
		.wifi_uart_s1_address                                 (mm_interconnect_0_wifi_uart_s1_address),                                 //                              wifi_uart_s1.address
		.wifi_uart_s1_write                                   (mm_interconnect_0_wifi_uart_s1_write),                                   //                                          .write
		.wifi_uart_s1_read                                    (mm_interconnect_0_wifi_uart_s1_read),                                    //                                          .read
		.wifi_uart_s1_readdata                                (mm_interconnect_0_wifi_uart_s1_readdata),                                //                                          .readdata
		.wifi_uart_s1_writedata                               (mm_interconnect_0_wifi_uart_s1_writedata),                               //                                          .writedata
		.wifi_uart_s1_begintransfer                           (mm_interconnect_0_wifi_uart_s1_begintransfer),                           //                                          .begintransfer
		.wifi_uart_s1_chipselect                              (mm_interconnect_0_wifi_uart_s1_chipselect)                               //                                          .chipselect
	);

	trolley_system_irq_mapper irq_mapper (
		.clk           (altpll_0_c0_clk),                    //       clk.clk
		.reset         (rst_controller_001_reset_out_reset), // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),           // receiver0.irq
		.receiver1_irq (irq_mapper_receiver1_irq),           // receiver1.irq
		.receiver2_irq (irq_mapper_receiver2_irq),           // receiver2.irq
		.receiver3_irq (irq_mapper_receiver3_irq),           // receiver3.irq
		.receiver4_irq (irq_mapper_receiver4_irq),           // receiver4.irq
		.receiver5_irq (irq_mapper_receiver5_irq),           // receiver5.irq
		.receiver6_irq (irq_mapper_receiver6_irq),           // receiver6.irq
		.receiver7_irq (irq_mapper_receiver7_irq),           // receiver7.irq
		.sender_irq    (nios2_gen2_0_irq_irq)                //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                         // reset_in0.reset
		.reset_in1      (nios2_gen2_0_debug_reset_request_reset), // reset_in1.reset
		.clk            (clk_clk),                                //       clk.clk
		.reset_out      (rst_controller_reset_out_reset),         // reset_out.reset
		.reset_req      (),                                       // (terminated)
		.reset_req_in0  (1'b0),                                   // (terminated)
		.reset_req_in1  (1'b0),                                   // (terminated)
		.reset_in2      (1'b0),                                   // (terminated)
		.reset_req_in2  (1'b0),                                   // (terminated)
		.reset_in3      (1'b0),                                   // (terminated)
		.reset_req_in3  (1'b0),                                   // (terminated)
		.reset_in4      (1'b0),                                   // (terminated)
		.reset_req_in4  (1'b0),                                   // (terminated)
		.reset_in5      (1'b0),                                   // (terminated)
		.reset_req_in5  (1'b0),                                   // (terminated)
		.reset_in6      (1'b0),                                   // (terminated)
		.reset_req_in6  (1'b0),                                   // (terminated)
		.reset_in7      (1'b0),                                   // (terminated)
		.reset_req_in7  (1'b0),                                   // (terminated)
		.reset_in8      (1'b0),                                   // (terminated)
		.reset_req_in8  (1'b0),                                   // (terminated)
		.reset_in9      (1'b0),                                   // (terminated)
		.reset_req_in9  (1'b0),                                   // (terminated)
		.reset_in10     (1'b0),                                   // (terminated)
		.reset_req_in10 (1'b0),                                   // (terminated)
		.reset_in11     (1'b0),                                   // (terminated)
		.reset_req_in11 (1'b0),                                   // (terminated)
		.reset_in12     (1'b0),                                   // (terminated)
		.reset_req_in12 (1'b0),                                   // (terminated)
		.reset_in13     (1'b0),                                   // (terminated)
		.reset_req_in13 (1'b0),                                   // (terminated)
		.reset_in14     (1'b0),                                   // (terminated)
		.reset_req_in14 (1'b0),                                   // (terminated)
		.reset_in15     (1'b0),                                   // (terminated)
		.reset_req_in15 (1'b0)                                    // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (1),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~reset_reset_n),                         // reset_in0.reset
		.reset_in1      (nios2_gen2_0_debug_reset_request_reset), // reset_in1.reset
		.clk            (altpll_0_c0_clk),                        //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset),     // reset_out.reset
		.reset_req      (rst_controller_001_reset_out_reset_req), //          .reset_req
		.reset_req_in0  (1'b0),                                   // (terminated)
		.reset_req_in1  (1'b0),                                   // (terminated)
		.reset_in2      (1'b0),                                   // (terminated)
		.reset_req_in2  (1'b0),                                   // (terminated)
		.reset_in3      (1'b0),                                   // (terminated)
		.reset_req_in3  (1'b0),                                   // (terminated)
		.reset_in4      (1'b0),                                   // (terminated)
		.reset_req_in4  (1'b0),                                   // (terminated)
		.reset_in5      (1'b0),                                   // (terminated)
		.reset_req_in5  (1'b0),                                   // (terminated)
		.reset_in6      (1'b0),                                   // (terminated)
		.reset_req_in6  (1'b0),                                   // (terminated)
		.reset_in7      (1'b0),                                   // (terminated)
		.reset_req_in7  (1'b0),                                   // (terminated)
		.reset_in8      (1'b0),                                   // (terminated)
		.reset_req_in8  (1'b0),                                   // (terminated)
		.reset_in9      (1'b0),                                   // (terminated)
		.reset_req_in9  (1'b0),                                   // (terminated)
		.reset_in10     (1'b0),                                   // (terminated)
		.reset_req_in10 (1'b0),                                   // (terminated)
		.reset_in11     (1'b0),                                   // (terminated)
		.reset_req_in11 (1'b0),                                   // (terminated)
		.reset_in12     (1'b0),                                   // (terminated)
		.reset_req_in12 (1'b0),                                   // (terminated)
		.reset_in13     (1'b0),                                   // (terminated)
		.reset_req_in13 (1'b0),                                   // (terminated)
		.reset_in14     (1'b0),                                   // (terminated)
		.reset_req_in14 (1'b0),                                   // (terminated)
		.reset_in15     (1'b0),                                   // (terminated)
		.reset_req_in15 (1'b0)                                    // (terminated)
	);

endmodule
